/* Scaffolding */
html, body, #demo {
	margin: 0;
	padding: 0;
	height: 100%;
	min-height: 100%;
	font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
	text-rendering: optimizeLegibility;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

body {
	background-color: #ccc;
}

h1 {
	font-size: 4em;
	letter-spacing: -0.01em;
	margin-top: 0;
	margin-bottom: 1em;
}

h2 {
	margin-top: 0;
	margin-bottom: 0em;
}

p {
	margin-top: 0;
	margin-bottom: 1em;
	line-height: 1.4;
}

button {
	padding: 15px 30px;
	background: black;
	color: white;
	border: none;
	font-size: 1.5em;
	font-weight: bold;
	letter-spacing: -0.05em;
	margin-right: 10px;
	cursor: pointer;
}

.pyramid__element {
	background-color: rgba(255, 255, 255, 0.333333);
	/*cubic-bezier(.63,-0.43,.33,1.41);*/
	/*cubic-bezier(0.25, 0.46, 0.45, 0.94)*/
	transition: all 300ms cubic-bezier(0.785, 0.135, 0.150, 0.860), opacity 300ms linear, background-color 0ms linear;
}

/*  You can apply a transition like this, or you can use the zoomTransition prop.
	This zoom in transition will apply to all elements while they are zooming in/out and when they are zoomedIn.
	except for the elements in pyramids which have a zoomTransition set via props (that style has a higher specificity) */
.pyramid__element--zoomingIn,
.pyramid__element--zoomingOut,
.pyramid__element--zoomedIn {
	background-color: black;
}

@media screen and (prefers-reduced-motion) {
	.pyramid__element--zoomingIn,
	.pyramid__element--zoomingOut,
	.pyramid__element--zoomedIn {
		transition: none !important;
	}
}

.view {
	background-color: #ccc;
}
